SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS REPORT_INFO;
DROP TABLE IF EXISTS COMMENT_INFO;
DROP TABLE IF EXISTS IMAGE_INFO;
DROP TABLE IF EXISTS PLAYER_INFO;
DROP TABLE IF EXISTS POST_INFO;
DROP TABLE IF EXISTS season;
DROP TABLE IF EXISTS team;
DROP TABLE IF EXISTS TEAM_INFO;
DROP TABLE IF EXISTS USER_INFO;




/* Create Tables */

CREATE TABLE COMMENT_INFO
(
	CMI_NUM int NOT NULL AUTO_INCREMENT,
	CMI_CONTENT varchar(100) NOT NULL,
	CMI_CREDAT char(8) NOT NULL,
	CMI_CRETIM char(6) NOT NULL,
	STATUS enum(ACTIVE, BLOCKED) DEFAULT 'ACTIVE' NOT NULL,
	PI_NUM int NOT NULL,
	UI_NUM int NOT NULL,
	PRIMARY KEY (CMI_NUM)
);


CREATE TABLE IMAGE_INFO
(
	IMG_NUM int NOT NULL AUTO_INCREMENT,
	IMG_URL varchar(100),
	PI_NUM int NOT NULL,
	PRIMARY KEY (IMG_NUM)
);


CREATE TABLE PLAYER_INFO
(
	PI_NUM int NOT NULL AUTO_INCREMENT,
	PI_NAME varchar(100) NOT NULL,
	PI_DATE_OF_BIRTH date NOT NULL,
	PI_NATIONALITY varchar(50) NOT NULL,
	PI_POSITION varchar(50) NOT NULL,
	PI_SHIRT_NUMBER int NOT NULL,
	TM_NUM int NOT NULL,
	PRIMARY KEY (PI_NUM)
);


CREATE TABLE POST_INFO
(
	PI_NUM int NOT NULL AUTO_INCREMENT,
	PI_TITLE varchar(20) NOT NULL,
	PI_CONTENT text NOT NULL,
	PI_CREATED datetime NOT NULL,
	PI_UPDATED datetime NOT NULL,
	PI_VIEWS int DEFAULT 0 NOT NULL,
	STATUS enum(ACTIVE, BLOCKED) DEFAULT 'ACTIVE' NOT NULL,
	UI_NUM int NOT NULL,
	PRIMARY KEY (PI_NUM)
);


CREATE TABLE REPORT_INFO
(
	RI_NUM int NOT NULL AUTO_INCREMENT,
	UI_NUM int NOT NULL,
	REPORTED_TYPE enum(게시물, 댓글) NOT NULL,
	REPORTED_NUM int NOT NULL,
	RI_REASON varchar(100) NOT NULL,
	STATUS enum(대기중, 처리완료) DEFAULT '대기중' NOT NULL,
	RI_CREATED char(8) NOT NULL,
	RI_UPDATED char(6) NOT NULL,
	PI_NUM int NOT NULL,
	CMI_NUM int NOT NULL,
	PRIMARY KEY (RI_NUM)
);


CREATE TABLE season
(
	id int NOT NULL AUTO_INCREMENT,
	start_date varchar(30),
	end_date varchar(30),
	current_matchday int,
	winner varchar(100),
	created timestamp NOT NULL,
	updated timestamp NOT NULL,
	PRIMARY KEY (id)
);


CREATE TABLE team
(
	id int NOT NULL AUTO_INCREMENT,
	name varchar(100),
	short_name varchar(50),
	tla varchar(3),
	crest varchar(255),
	created timestamp NOT NULL,
	updated timestamp,
	PRIMARY KEY (id)
);


CREATE TABLE TEAM_INFO
(
	TM_NUM int NOT NULL AUTO_INCREMENT,
	TM_NAME varchar(100) NOT NULL,
	TM_COACH varchar(100) NOT NULL,
	PRIMARY KEY (TM_NUM)
);


CREATE TABLE USER_INFO
(
	UI_NUM int NOT NULL AUTO_INCREMENT,
	UI_ID varchar(20) NOT NULL,
	UI_PWD varchar(20) NOT NULL,
	UI_NAME varchar(10) NOT NULL,
	UI_NICKNAME varchar(10) NOT NULL,
	UI_EMAIL varchar(30),
	UI_PHONE varchar(13),
	UI_FAVORITE varchar(30),
	UI_CREDAT char(8) NOT NULL,
	UI_CRETIM char(6),
	IS_ADMIN tinyint(1) NOT NULL,
	isKakaoUser tinyint(1) DEFAULT 0,
	isNaverUser tinyint(1) DEFAULT 0,
	emailVerified tinyint(1) DEFAULT 0,
	PRIMARY KEY (UI_NUM),
	UNIQUE (UI_ID),
	UNIQUE (UI_NICKNAME)
);



/* Create Foreign Keys */

ALTER TABLE REPORT_INFO
	ADD FOREIGN KEY (CMI_NUM)
	REFERENCES COMMENT_INFO (CMI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT_INFO
	ADD FOREIGN KEY (PI_NUM)
	REFERENCES POST_INFO (PI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE IMAGE_INFO
	ADD FOREIGN KEY (PI_NUM)
	REFERENCES POST_INFO (PI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REPORT_INFO
	ADD FOREIGN KEY (PI_NUM)
	REFERENCES POST_INFO (PI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLAYER_INFO
	ADD FOREIGN KEY (TM_NUM)
	REFERENCES TEAM_INFO (TM_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT_INFO
	ADD FOREIGN KEY (UI_NUM)
	REFERENCES USER_INFO (UI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE POST_INFO
	ADD FOREIGN KEY (UI_NUM)
	REFERENCES USER_INFO (UI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REPORT_INFO
	ADD FOREIGN KEY (UI_NUM)
	REFERENCES USER_INFO (UI_NUM)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



